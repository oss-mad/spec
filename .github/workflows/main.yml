# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.0.0
        with:
        # Version range or exact version of Python to use, using SemVer's version range syntax. Reads from .python-version if unset.
        python-version: # optional
        # File containing the Python version to use. Example: .python-version
        python-version-file: # optional
        # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv, poetry.
        cache: # optional
        # The target architecture (x86, x64) of the Python interpreter.
        architecture: # optional
        # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
        token: # optional, default is ${{ github.token }}
        # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: # optional
      

      # Codescanning using Synopsys detect
      - name: codescan
        run: bash <(curl -s -L https://detect.synopsys.com/detect7.sh) --detect.project.name=openfeature_scan

  
